# this script reads the log of machines generated by decision.rb and
# creates intermediate values among those written in the log entries
# in order to generate a better chart of # of machines vs. time

# input parameter: workload execution time (in seconds)

unless ARGV[0]
  puts "Execution time not provided. Pass the time (in seconds) of the workload execution time."
  exit
else
  execution_time = ARGV[0]
  initial_machines = (ARGV[2]) ? ARGV[2] : 2
  LOGS_PATH = (ARGV[1]) ? ARGV[1] : "logs/"
end

# reads the logs directory to detail each log file
Dir.glob(LOGS_PATH + '*.log') do |file|
  # loads the log file
  entries = File.readlines(file).map(&:chomp)

  # extended log file
  extended_log_file = File.basename(file, ".log") + "_extended.log"
  
  # sets initial values
  machines = initial_machines
  current_index = 1 # forgets about first line (ie. 0) of log file
  waiting_end = true
  
  # expected log entry format: date, interval, # of machines
  # example: 2013/06/14 17:30:20,1892,2
  
  open(LOGS_PATH + extended_log_file, 'w+') do |f|  
    (0..execution_time.to_i).to_a.each do |i|
      # treats the case line is blank or no entry was inserted in the log file
      if entries[current_index]
        if waiting_end && i >= entries[current_index].split(",")[1].to_i
          machines = entries[current_index].split(",")[2]
          if current_index + 1 < entries.size
            current_index += 1
          else
            waiting_end = false
          end
        end
      
        f.puts i.to_s + "," + machines.to_s
      end
    end
  end
end